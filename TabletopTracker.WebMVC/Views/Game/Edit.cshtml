@model TabletopTracker.Models.Game.GameEdit

@{
    ViewBag.Title = "Edit Game";
}

<div class="cover">
    <h1 class="cover-header">@ViewBag.Title</h1>
    <p class="subheader">Edit a game in your collection.</p>
    <p>@Html.ActionLink("Back to Your Collection", "Index", null, new { @class = "btn btn-primary" })</p>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <hr />
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-auto">
                <form>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.GameId)
                    <div class="mb-3">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.PublisherId, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(m => Model.PublisherId, ViewBag.Publishers as IEnumerable<SelectListItem>, "Select Publisher", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PublisherId, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(m => Model.CategoryId, ViewBag.Categories as IEnumerable<SelectListItem>, "Select Category", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.MinPlayers, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.MinPlayers, new { htmlAttributes = new { @class = "form-control", @min = "1" } })
                        @Html.ValidationMessageFor(model => model.MinPlayers, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.MaxPlayers, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.MaxPlayers, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MaxPlayers, "", new { @class = "text-danger" })
                    </div>
                    <div class="row mb-3 justify-content-center">
                        @Html.LabelFor(model => model.HavePlayed, htmlAttributes: new { @class = "control-label col-3" })
                        <div class="col-9 form-check">
                            @Html.EditorFor(model => model.HavePlayed)
                            @Html.ValidationMessageFor(model => model.HavePlayed, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="mb-3">
                        @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control", @min = "1", @max = "10" } })
                        @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
                    </div>
                    <div class="text-center mb-5">
                        <button type="submit" class="btn btn-success">Save</button>

                    </div>
                </form>
            </div>
        </div>
    </div>
 }

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<style>
    .cover {
        padding: 25px 0;
        text-align: center;
        margin: auto;
    }

    .cover-header {
        font-size: 48px;
        font-family: 'Frutiger LT Std';
    }

    .subheader {
        font-size: 16px;
        font-family: 'Frutiger LT Std';
        font-weight: bold;
    }
</style>
